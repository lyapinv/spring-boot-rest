kind: ConfigMap
apiVersion: v1
metadata:
  name: spring-boot-rest-client-cfg
  namespace: tutorial
data:
  server.service.uri: http://spring-boot-rest-server-svc.tutorial.svc.cluster.local:8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spring-boot-rest-client
    version: v1
  name: spring-boot-rest-client
  namespace: tutorial
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-rest-client
      version: v1
  template:
    metadata:
      labels:
        app: spring-boot-rest-client
        group: tutorial-rest-app
        version: v1
      annotations:
        sidecar.istio.io/inject: "true"                 # service mesh sidecar
#        sidecar.istio.io/rewriteAppHTTPProbers: "true"  # settings for probe when mTLS enabled
    spec:
      containers:
        - env:
            - name: JAVA_OPTIONS
              value: -Xms128m -Xmx128m -Xmn128m
            - name: SERVER_URI
              valueFrom:
                configMapKeyRef:
                  name: spring-boot-rest-client-cfg
                  key: server.service.uri
          name: spring-boot-rest-client
          image: image-registry.openshift-image-registry.svc:5000/tutorial/spring-boot-rest-client:v11
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
          securityContext:
            privileged: false
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-rest-client-svc
  namespace: tutorial
  labels:
    app: spring-boot-rest-client
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: spring-boot-rest-client
